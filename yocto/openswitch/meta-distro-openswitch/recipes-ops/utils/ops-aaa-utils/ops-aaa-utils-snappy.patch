diff --git a/ops_aaautilspamcfg.py b/ops_aaautilspamcfg.py
index 3f49320..d1cf053 100644
--- a/ops_aaautilspamcfg.py
+++ b/ops_aaautilspamcfg.py
@@ -43,18 +43,18 @@ default_row_initialized = 0
 idl = None
 
 vlog = ovs.vlog.Vlog("ops_aaautilspamcfg")
-def_db = 'unix:/var/run/openvswitch/db.sock'
+def_db = 'unix:%s/db.sock' % ovs.dirs.RUNDIR
 
 # Schema path
-ovs_schema = '/usr/share/openvswitch/vswitch.ovsschema'
+ovs_schema = "%s/vswitch.ovsschema" % ovs.dirs.PKGDATADIR
 
 # Program control
 exiting = False
 seqno = 0
 
-PAM_ETC_CONFIG_DIR = "/etc/pam.d/"
-RADIUS_CLIENT = "/etc/raddb/server"
-SSHD_CONFIG = "/etc/ssh/sshd_config"
+PAM_ETC_CONFIG_DIR = "%s/pam.d/" % os.environ.get("OVS_SYSCONFDIR", """/etc""")
+RADIUS_CLIENT = "%s/raddb/server" % os.environ.get("OVS_SYSCONFDIR", """/etc""")
+SSHD_CONFIG = "%s/ssh/sshd_config" % os.environ.get("OVS_SYSCONFDIR", """/etc""")
 
 dispatch_list = []
 SYSTEM_TABLE = "System"
@@ -90,6 +90,14 @@ URL = "url"
 RADIUS_PAP = "pap"
 RADIUS_CHAP = "chap"
 
+#----------------- get_distro ---------------
+def get_distro():
+    """
+    Name of your Linux distro (in lowercase).
+    """
+    with open("/etc/issue") as f:
+        return f.read().lower().split()[0]
+
 #---------------- unixctl_exit --------------------------
 def unixctl_exit(conn, unused_argv, unused_aux):
     global exiting
@@ -345,7 +353,7 @@ def modify_common_auth_session_file(fallback_value, radius_value,
     else:
         radius_lib_suffix = "auth.so"
 
-    local_auth[0] = "auth\t[success=1 default=ignore]\tpam_unix.so nullok\n"
+    local_auth[0] = "auth\t[success=1 default=ignore]\tpam_unix.so nullok"
     radius_auth[0] = \
         "auth\t[success=1 default=ignore]\tpam_radius_"
     fallback_and_radius_auth[0] = \
@@ -354,7 +362,7 @@ def modify_common_auth_session_file(fallback_value, radius_value,
     fallback_local_auth[0] =  \
         "auth\t[success=1 default=ignore]\tpam_unix.so\ttry_first_pass\n"
 
-    local_auth[1] = "session\trequired\tpam_unix.so\n"
+    local_auth[1] = "session\trequired\tpam_unix.so"
     radius_auth[1] = "session\trequired\tpam_radius_auth.so\n"
 
     fallback_and_radius_auth[1] = \
@@ -363,14 +371,23 @@ def modify_common_auth_session_file(fallback_value, radius_value,
 
     fallback_local_auth[1] = "session\trequired\tpam_unix.so\n"
 
-    filename[0] = PAM_ETC_CONFIG_DIR + "common-auth-access"
-    filename[1] = PAM_ETC_CONFIG_DIR + "common-session-access"
+    if (get_distro() == "debian"):
+        filename[0] = PAM_ETC_CONFIG_DIR + "common-auth"
+        filename[1] = PAM_ETC_CONFIG_DIR + "common-session"
+    else:
+        filename[0] = PAM_ETC_CONFIG_DIR + "common-auth-access"
+        filename[1] = PAM_ETC_CONFIG_DIR + "common-session-access"
+
     for count in range(0, 2):
         with open(filename[count], "r") as f:
             contents = f.readlines()
         cfgnow = 0
         for index, line in enumerate(contents):
             if local_auth[count] in line or radius_auth[count] in line:
+                # Allow line to finish with 'nullok_secure' as well as
+                # just 'nullok'. On Debian it finishes with 'nullok_secure'.
+                if local_auth[count] in line:
+                    local_auth[count] = contents[index].strip('\n')
                 del contents[index]
                 break
             elif fallback_and_radius_auth[count] in line:
@@ -379,7 +396,7 @@ def modify_common_auth_session_file(fallback_value, radius_value,
                 break
 
         if radius_value == OPS_FALSE:
-            contents.insert(index, local_auth[count])
+            contents.insert(index, local_auth[count] + "\n")
 
         if radius_value == OPS_TRUE and fallback_value == OPS_FALSE  \
            and count == 0:
